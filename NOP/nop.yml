---
- name: install nopCommerce
  hosts: appserver
  become: yes
  tasks:
    - name: fail for unsupported os
      ansible.builtin.fail:
        msg: "This playbook is designed only for Debian os"
      when: ansible_facts['os_family'] != 'Debian'
    - name: update packages and install dotnet
      ansible.builtin.apt:
        name: "{{ package_dotnet }}"
        state: present
    - ansible.builtin.debug:
        msg: "dotnetis installed using package {{ package_dotnet }}"
    - name: create nop group
      ansible.builtin.group:
        name: "{{ group }}"
        state: present
    - ansible.builtin.debug:
        msg: "group {{ group }} has been created"
    - name: create nop user
      ansible.builtin.user:
        name: "{{ user }}"
        state: present
    - ansible.builtin.debug:
        msg: "user {{ user }} has been created"
    - name: create dir
      ansible.builtin.file:
        path: "{{ home_dir }}"
        state: directory
    - name: install unzip
      ansible.builtin.package:
        name: unzip
        state: present
    - name: download nop
      ansible.builtin.get_url:
        url: "{{ nop_url }}"
        dest: "{{ home_dir }}"
    - name:  unzip nop
      ansible.builtin.unarchive:
        src: "{{ nop_url }}"
        dest: "{{ home_dir }}"
        owner: "{{ user }}"
        remote_src: yes
    - ansible.builtin.debug:
        msg: "tomcat is downloaded and extracted to nopCommerce"
    - name: changing onwership
      ansible.builtin.file:
        path: "{{ home_dir }}"
        owner: "{{ user }}"
        group: "{{ group }}"
    - name: create service file
      ansible.builtin.template:
        src: templates/nopCommerce.service.j2
        dest: "/etc/systemd/system/nopCommerce.service"
      notify:
       - start nopCommerce
  handlers:
    - name: start nopCommerce
      ansible.builtin.systemd_service:
        name: nopCommerce
        daemon_reload: true
        enabled: yes
        state: started
    
      
